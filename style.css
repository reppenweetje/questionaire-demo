/* Basic Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Define base colors and fonts */
:root {
    --primary-color: #000d5b; /* Navy Blue */
    --secondary-color: #f0f2f5; /* Light Grey Background */
    --accent-color: #ffea00; /* Yellow */
    --text-color: #1c1e21; /* Dark text */
    --option-bg: #e9e9e9; /* Option background */
    --option-bg-hover: #dcdcdc;
    --option-bg-selected: #e7f3ff; /* Lighter blue for selection */
    --option-border-selected: var(--primary-color);
    --border-color: #ced0d4;
    --body-font: 'Montserrat', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

body {
    font-family: var(--body-font);
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: var(--secondary-color);
    color: var(--text-color);
    line-height: 1.5;
    /* Improve text rendering */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.questionnaire-container {
    width: 100%;
    max-width: 420px; /* Adjusted max-width based on images */
    background-color: #ffffff;
    border-radius: 0; /* No border radius on mobile */
    box-shadow: none; /* No shadow on mobile */
    overflow: hidden;
    min-height: 100vh; /* Use min-height for better mobile compatibility */
    display: flex;
    flex-direction: column;
}

.step {
    padding: 30px 25px; /* Adjusted padding */
    text-align: left; /* Align text left */
    flex-grow: 1;
    display: flex; /* Changed from block to flex */
    flex-direction: column;
    justify-content: flex-start; /* Align content top */
    background-color: #ffffff; /* Ensure step background is white */
    /* Transitions for fade in/out */
    opacity: 1;
    transition: opacity 0.4s ease-in-out;
    /* Removed text-align: center */
}

/* Class for hidden steps (used by JS) */
.step.hidden {
    display: none;
    opacity: 0;
}

/* Step specific background colors */
#step-0, #step-1, #step-7 {
    background-color: var(--secondary-color);
     align-items: center; /* Center content for intro/start/end */
    justify-content: center; /* Center content vertically */
    text-align: center;
}

#step-1 {
    background-color: var(--primary-color);
    color: white;
}


.step h1, .step h2 {
    color: var(--primary-color);
    font-size: 1.75rem; /* Adjust as needed */
    margin-bottom: 10px;
    font-weight: 600;
}

.step p {
    color: #606770; /* Lighter text color */
    font-size: 1rem;
    margin-bottom: 30px;
}

/* Intro screen specific styles */
#step-0 h1 {
    color: var(--text-color);
    font-size: 2rem;
}
#step-0 p {
    max-width: 80%;
    margin-bottom: 40px;
}

#step-1 h2 {
    color: white;
    font-size: 2.5rem;
    font-weight: bold;
}

/* Button Styles */
button, .repp-link-button {
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 14px 28px;
    border-radius: 50px; /* Fully rounded */
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    margin-top: auto; /* Push buttons to bottom */
    transition: background-color 0.3s ease, transform 0.1s ease;
    text-decoration: none;
    display: inline-block;
    text-align: center;
    width: 60%; /* Default width */
    align-self: center; /* Center button horizontally */
}

button:active, .repp-link-button:active {
     transform: scale(0.98);
}

button:hover, .repp-link-button:hover {
    background-color: #000a4a;
}

.start-button {
     background-color: var(--accent-color);
     color: var(--primary-color);
     border-radius: 50px; /* Fully rounded */
     padding: 16px 35px;
     font-size: 1.1rem;
     width: auto; /* Adjust width as needed */
     box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.start-button:hover {
    background-color: #e6d200; /* Darker Yellow */
}

.repp-link-button {
    margin-top: 40px;
    width: auto;
    padding: 12px 45px;
}

/* Navigation Buttons (Prev/Next/Submit) */
.step .nav-buttons {
    display: flex;
    justify-content: space-between; /* Push items to ends */
    align-items: center; /* Ensure vertical alignment */
    gap: 10px;
    width: 100%;
    margin-top: auto;
    padding-top: 20px;
    position: static;
}

.step .prev-button,
.step .next-button:not(.round-next-button),
.step .submit-button {
    /* Styles for regular buttons */
    width: auto;
    padding: 14px 40px;
    flex-grow: 0; /* Don't grow by default */
}

/* Style for the big round next button */
.step .round-next-button {
    width: 60px;
    height: 60px;
    flex-basis: 60px; /* Reinforce fixed size */
    flex-grow: 0; /* Don't grow */
    flex-shrink: 0; /* Don't shrink */
    padding: 0;
    border-radius: 50%;
    font-size: 1.8rem; /* Slightly larger arrow */
    display: flex;
    justify-content: center;
    align-items: center;
    /* Explicitly set line-height to help vertical centering with flex */
    line-height: 0;
    /* Ensure no conflicting margins */
    margin: 0;
}

/* Progress Indicator */
.progress-indicator {
    display: flex;
    justify-content: space-between;
    margin-bottom: 30px;
    padding: 0; /* Remove horizontal padding */
    width: 80%; /* Make it slightly narrower */
    margin-left: auto;
    margin-right: auto;
}

.progress-indicator div {
    height: 4px; /* Thinner lines */
    flex-grow: 1;
    background-color: #e0e0e0;
    margin: 0 3px;
    border-radius: 2px;
    transition: background-color 0.4s ease;
}

.progress-indicator div.active {
    background-color: var(--primary-color);
}

/* Options Container */
.options-container {
    display: grid;
    gap: 12px; /* Slightly reduced gap */
    margin-top: 20px;
    width: 100%;
}

/* Default grid (vraag 3 - Opslag) */
.options-container.storage-options {
     grid-template-columns: repeat(2, 1fr);
}

/* Grid for vraag 1 - Doel aankoop */
.options-container.purpose-options {
     grid-template-columns: 1fr; /* Stack vertically */
}

/* Grid for vraag 2 - Oppervlakte */
.surface-options {
    grid-template-columns: repeat(3, 1fr);
    grid-template-areas:
        "lt25  40m2  50m2"
        "gt50  gt50  gt50"
        "geenidee anders anders";
}

.surface-options .option[data-value="<25m2"] { grid-area: lt25; }
.surface-options .option[data-value="~40m2"] { grid-area: 40m2; }
.surface-options .option[data-value="~50m2"] { grid-area: 50m2; }
.surface-options .option[data-value=">50m2"] { grid-area: gt50; }
.surface-options .option[data-value="geen_idee"] { grid-area: geenidee; }
.surface-options .option-anders { grid-area: anders; }

/* Grid for vraag 4 - Financiering Type */
.financing-options {
     grid-template-columns: 1fr; /* Stack vertically */
}

/* Option Styling */
.option {
    background-color: var(--option-bg);
    padding: 15px;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.2s ease, border-color 0.2s ease, transform 0.1s ease;
    border: 1px solid var(--option-bg); /* Use bg color as border initially */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    min-height: 80px; /* Adjusted height */
    font-weight: 500;
}

.option:hover {
    background-color: var(--option-bg-hover);
}

.option:active {
    transform: scale(0.99);
}

.option.selected {
    background-color: var(--option-bg-selected);
    border-color: var(--option-border-selected);
    color: var(--primary-color); /* Darker text when selected */
    font-weight: 600;
}

/* Specific styling for purpose options (Vraag 1) */
.purpose-options .option {
    flex-direction: row;
    justify-content: space-between;
    padding: 20px;
    text-align: left;
}

.purpose-options .option span {
    flex-grow: 1;
    margin-left: 15px;
}

.option img {
    display: inline-block; /* Keep display property */
    width: 40px; /* Adjust icon size if needed */
    height: 40px;
    /* Removed placeholder styles: background-color, border-radius, line-height, text-align, font-size, color */
    object-fit: contain; /* Ensure icon scales nicely within the dimensions */
}

.option-anders {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    text-align: left;
    background-color: var(--option-bg);
    font-weight: normal;
}

.option-anders input[type="text"] {
    margin-left: 8px;
    padding: 6px 8px;
    border: 1px solid var(--border-color);
    border-radius: 4px;
    width: 60px;
    font-size: 0.9rem;
    text-align: center;
}

.option-anders input[type="text"]:disabled {
    background-color: #f5f5f5;
    cursor: not-allowed;
    border-color: #e0e0e0;
}

.option-anders.selected {
     background-color: var(--option-bg-selected);
     border-color: var(--option-border-selected);
}

/* Slider Styles (Vraag 5) - Rotated Container Approach */
.slider-outer-container { /* New container for rotation */
    margin-top: 40px;
    height: 350px; /* Adjusted height to better fit content */
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative; /* For positioning labels & value */
    padding-left: 100px; /* Add padding to make space for labels on the left */
    padding-right: 20px; /* Add some padding on the right */
}

.slider-container { /* This container will be rotated */
    position: relative;
    width: 300px; /* Height of the original track becomes width */
    height: auto; /* Height based on content */
    display: flex;
    flex-direction: column;
    align-items: center;
    transform: rotate(-90deg); /* Rotate the container */
    transform-origin: center center;
    /* Removed margin-top */
}

#eigen-geld-slider {
    -webkit-appearance: none;
    appearance: none;
    width: 100%; /* Slider takes full width of rotated container (was height) */
    height: 8px; /* Height of the horizontal track (was width) */
    background: var(--secondary-color); /* Track background */
    border-radius: 4px;
    outline: none;
    cursor: pointer;
    margin: 0; /* Remove default margins */
    background-image: linear-gradient(to right, var(--primary-color) 0%, var(--primary-color) var(--slider-fill-percent, 50%), var(--secondary-color) var(--slider-fill-percent, 50%), var(--secondary-color) 100%);
    background-size: 100% 100%;
    background-repeat: no-repeat;
}

/* Remove pseudo-element style */
/* #eigen-geld-slider::before { ... } */

/* Thumb Styling */
#eigen-geld-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 30px; /* Thumb size */
    height: 30px;
    background: var(--primary-color);
    border-radius: 50%;
    cursor: pointer;
    position: relative;
    z-index: 2; /* Ensure thumb is above the fill */
    border: 4px solid white; /* White border like in image */
    box-shadow: 0 1px 3px rgba(0,0,0,0.2);
    /* Add margin to visually separate thumb from track end if needed */
     margin-top: -11px; /* Vertically center thumb on the track */
}

#eigen-geld-slider::-moz-range-thumb {
    width: 22px; /* Adjust for border */
    height: 22px;
    background: var(--primary-color);
    border-radius: 50%;
    cursor: pointer;
    border: 4px solid white;
    box-shadow: 0 1px 3px rgba(0,0,0,0.2);
    position: relative;
    z-index: 2;
    /* Adjust vertical centering for Firefox */
    margin-top: -9px; /* Might need adjustment */
}

.slider-labels-container { /* Position labels next to the slider */
    position: absolute;
    left: 0; /* Align to the far left of the outer container */
    top: 50%; /* Center vertically */
    transform: translateY(-50%); /* Fine-tune vertical centering */
    width: 90px; /* Give labels a fixed width */
    height: 300px; /* Match visual height */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-end; /* Align text to the right, closer to slider */
    padding-right: 15px; /* Space between labels and slider area */
}

.slider-labels-container span {
    font-size: 0.9rem;
    color: var(--text-color);
    font-weight: 500;
}

#slider-value-display { /* Position above the slider */
     position: absolute;
     top: 0; /* Align to the top of the outer container */
     left: 50%; /* Center horizontally within the outer container */
     transform: translateX(-50%);
     font-weight: bold;
     font-size: 1.2rem;
     color: var(--primary-color);
     margin-top: 0;
     padding-bottom: 15px; /* Add space below the value display */
}


/* End Screen Specific Styles */
#step-7 h1 {
    color: var(--primary-color);
    font-size: 2.5rem;
    margin-bottom: 30px;
}

/* Responsive adjustments */
@media (min-width: 481px) {
    /* Styles for tablet/desktop */
    body {
        background-color: var(--secondary-color);
    }
    .questionnaire-container {
        max-width: 420px;
        /* height: auto; Already default */
        min-height: auto; /* Reset min-height from mobile */
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
        margin: 40px auto;
    }
    .step {
         padding: 40px 35px; /* Restore desktop padding */
         min-height: 550px; /* Give steps a consistent min height on desktop */
         /* Ensure flex direction is correct */
         flex-direction: column;
         display: flex; /* Ensure flex is applied */
         /* Remove position relative if only needed for mobile absolute positioning */
         position: static;
    }

    /* Ensure content area doesn't scroll unnecessarily on desktop */
    .step-content {
        overflow-y: visible; /* Disable forced scroll */
        flex-grow: 1; /* Allow content to push buttons down */
    }

     /* Ensure nav buttons have correct spacing and alignment on desktop */
     .step .nav-buttons {
        position: static;
        justify-content: space-between;
        align-items: center; /* Ensure vertical alignment */
        padding-left: 0;
        padding-right: 0;
        padding-top: 20px;
        padding-bottom: 0;
        border-top: none;
        background-color: transparent;
     }

    /* Reset specific button width/grow from mobile */
     .step .nav-buttons button {
         width: auto;
         flex-grow: 0;
         margin: 0; /* Reset margins */
     }

     /* Ensure round button retains its specific styles on desktop */
     .step .nav-buttons .round-next-button {
        width: 60px;
        height: 60px;
        flex-basis: 60px;
        flex-grow: 0;
        flex-shrink: 0;
        padding: 0;
        margin: 0; /* Ensure no auto margins */
     }

}

/* Keep mobile grid adjustments from previous state */
@media (max-width: 480px) {
     /* Re-apply mobile specific grid if needed, but base is mobile-first */
    .options-container.storage-options {
        grid-template-columns: repeat(2, 1fr); /* Ensure 2 columns */
    }
    .surface-options {
        grid-template-columns: repeat(2, 1fr); /* Two columns on small mobile */
        grid-template-areas:
            "lt25  40m2"
            "50m2  gt50"
            "geenidee anders"; /* Keep anders spanning 2 */
    }
    .surface-options .option-anders { grid-area: anders; }

    /* Ensure step provides enough padding for buttons and content can scroll */
     .step {
        /* padding-bottom: 80px; Increased */
        padding-bottom: 100px; /* Increased padding */
        position: relative;
        /* Allow step itself to grow but manage content scroll separately */
        display: flex;
        flex-direction: column;
    }

    /* Allow content within the step to scroll if it overflows */
    .step-content {
        flex-grow: 1; /* Allow content to take available space */
        overflow-y: auto; /* Enable vertical scrolling only for content */
        /* Add some padding at the bottom inside the scrollable area */
        padding-bottom: 10px;
    }

     /* Push nav buttons container to bottom */
    .step .nav-buttons {
        position: absolute;
        bottom: 90px; /* Raised even higher */
        left: 0;
        right: 0;
        padding: 15px 25px; /* Consistent padding */
        justify-content: space-between; /* Ensure space-between */
        align-items: center; /* Ensure vertical alignment */
        background-color: #ffffff;
        border-top: 1px solid #eee;
        gap: 15px;
    }
     .step .nav-buttons button {
        width: auto;
        flex-grow: 0; /* Reset grow initially */
        flex-shrink: 1; /* Allow shrinking if needed, except round button */
        margin: 0;
     }

     /* Let regular buttons grow if needed on mobile */
     .step .nav-buttons button:not(.round-next-button) {
        flex-grow: 1;
     }

     /* Ensure round button specific sizes and flex props on mobile */
     .step .nav-buttons .round-next-button {
        width: 60px;
        height: 60px;
        flex-basis: 60px;
        flex-grow: 0;
        flex-shrink: 0;
        padding: 0;
        margin: 0;
     }

}

/* Align single button in step 2 to the right */
#step-2 .nav-buttons {
    justify-content: flex-end;
} 